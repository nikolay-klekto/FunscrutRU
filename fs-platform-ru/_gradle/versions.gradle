def dependenciesMap = concatMaps(
        version('1.5.31', [
                'org.jetbrains.kotlin:kotlin-gradle-plugin',
                'org.jetbrains.kotlin:kotlin-stdlib',
                'org.jetbrains.kotlin:kotlin-stdlib-jdk7',
                'org.jetbrains.kotlin:kotlin-stdlib-jdk8',
                'org.jetbrains.kotlin:kotlin-stdlib-common',
                'org.jetbrains.kotlin:kotlin-reflect'
        ]),
        version('4.0.0', [
                'com.idf.soul:auth-common',
                'com.idf.soul:auth-client',
                'com.idf.soul:auth-client-spring-webflux',
                'com.idf.soul:base-config',
                'com.idf.soul:base-spring5',
                'com.idf.soul:config-spring',
                'com.idf.soul:config-spring-webclient',
                'com.idf.soul:config-micrometer',
                'com.idf.soul:config-mongo',
                'com.idf.soul:config-mongeez',
                'com.idf.soul:config-database',
                'com.idf.soul:mm-crypt',
                'com.idf.soul:mm-event-bus',
                'com.idf.soul:mm-graphql-client',
                'com.idf.soul:mm-graphql-jooq',
                'com.idf.soul:mm-graphql-server',
                'com.idf.soul:mm-graphql-webclient',
                'com.idf.soul:warehouse-api',
                'com.idf.core.domain:gateway-attribution',
                'com.idf.core.domain:system-settings',
                'com.idf.core.dsl:script-api-engine',
                'com.idf.core.dsl:script-api-engine-context',
                'com.idf.core.dsl:script-api-loader-groovy',
                'com.idf.core.dsl:script-api-repository-classpath',
                'com.idf.core.dsl:script-api-validator',
                'com.idf.core.dsl:script-experiment-api',
                'com.idf.core.dsl:script-experiment-lang',
                'com.idf.core.dsl:script-experiment-model',
                'com.idf.core.dsl:script-registration-lang',
                'com.idf.core.dsl:script-registration-model',
                'com.idf.core.dsl:script-registration-router',
                'com.idf.core.dsl:script-registration-engine',
                'com.idf.core.dsl:script-schema-engine',
                'com.idf.core.dsl:script-schema-model',
                'com.idf.core.dsl:script-schema-factory-api',
                'com.idf.core.dsl:script-schema-factory-jdbc'
        ]),
        version('5.3.10', [
                'org.springframework:spring-aop',
                'org.springframework:spring-beans',
                'org.springframework:spring-core',
                'org.springframework:spring-context',
                'org.springframework:spring-webflux',
                'org.springframework:spring-web',
                'org.springframework:spring-jdbc',
                'org.springframework:spring-tx',
                'org.springframework:spring-test'
        ]),
        version('3.0.0.RELEASE', [
                'org.springframework.data:spring-data-mongodb'
        ]),
        version('4.0.3', [
                'org.mongodb:bson',
                'org.mongodb:mongodb-driver-core',
                'org.mongodb:mongodb-driver-sync',
                'org.mongodb:mongodb-driver-async',
                'org.mongodb:mongodb-driver-reactivestreams'
        ]),
        version('3.0.4', [
                'com.playtika.reactivefeign:feign-reactor-core',
                'com.playtika.reactivefeign:feign-reactor-webclient'
        ]),
        version('2.10.0', [
                'org.apache.logging.log4j:log4j-api',
                'org.apache.logging.log4j:log4j-core',
                'org.apache.logging.log4j:log4j-jcl',
                'org.apache.logging.log4j:log4j-slf4j-impl'
        ]),
        version('5.8.1', [
                'org.junit.jupiter:junit-jupiter-api',
                'org.junit.jupiter:junit-jupiter-params',
                'org.junit.jupiter:junit-jupiter-engine'
        ]),
        version('2.9.10', [
                'com.fasterxml.jackson.core:jackson-core',
                'com.fasterxml.jackson.core:jackson-databind',
                'com.fasterxml.jackson.core:jackson-annotations',
                'com.fasterxml.jackson.datatype:jackson-datatype-jsr310',
                'com.fasterxml.jackson.datatype:jackson-datatype-guava',
                'com.fasterxml.jackson.jaxrs:jackson-jaxrs-base',
                'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider',
                'com.fasterxml.jackson.module:jackson-module-jaxb-annotations',
                'com.fasterxml.jackson.module:jackson-module-scala_2.10',
                'com.fasterxml.jackson.module:jackson-module-kotlin',
                'com.fasterxml.jackson.dataformat:jackson-dataformat-csv',
                'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
        ]),
        version('10.10.1', [
                'io.github.openfeign:feign-core',
                'io.github.openfeign:feign-hystrix',
                'io.github.openfeign:feign-jackson',
                'io.github.openfeign:feign-gson',
                'io.github.openfeign:feign-slf4j',
                'io.github.openfeign:feign-jaxb'
        ]),
        version('2.5.5', [
                'com.apollographql.apollo:apollo-http-cache-api',
                'com.apollographql.apollo:apollo-normalized-cache-jvm',
                'com.apollographql.apollo:apollo-api-jvm',
                'com.apollographql.apollo:apollo-api',
                'com.apollographql.apollo:apollo-runtime',
                'com.apollographql.apollo:apollo-gradle-plugin'
        ]),
        version('1.2.0', [
                'io.micrometer:micrometer-core',
                'io.micrometer:micrometer-registry-prometheus'
        ]),
        version('3.4.10', [
                'io.projectreactor:reactor-core',
                'io.projectreactor:reactor-test'
        ]),
        version('3.12.0', [
                'com.squareup.okhttp3:okhttp',
                'com.squareup.okhttp3:logging-interceptor'
        ]),
        version('0.33.0', [
                'io.opentracing:opentracing-api',
                'io.opentracing:opentracing-noop'
        ]),
        version('3.13.5', [
                'org.jooq:jooq-codegen',
                'org.jooq:jooq-meta',
                'org.jooq:jooq'
        ]),
        [
                'com.mm.cfg4j:cfg4j-core'                           : '5.0.14',
                'com.gradle.publish:plugin-publish-plugin'          : '0.9.8',
                'org.jetbrains:annotations'                         : '13.0',
                'com.nhaarman:mockito-kotlin'                       : '1.6.0',
                'org.mockito:mockito-core'                          : '3.1.0',
                'com.squareup.okio:okio'                            : '2.5.0',
                'io.projectreactor.kotlin:reactor-kotlin-extensions': '1.1.4',
                'nu.studer:gradle-jooq-plugin'                      : '4.1',
                'mysql:mysql-connector-java'                        : '5.1.49',
                'com.h2database:h2'                                 : '1.4.196',
                'org.reactivestreams:reactive-streams'              : '1.0.3',
                'org.apache.commons:commons-lang3'                  : '3.12.0',
                'org.apache.commons:commons-text'                   : '1.9',
                'org.apache.commons:commons-math'                   : '2.0',
                'org.apache.commons:commons-math3'                  : '3.6.1',
                'org.apache.poi:poi'                                : '3.14',
                'commons-lang:commons-lang'                         : '2.6',
                'commons-codec:commons-codec'                       : '1.13',
                'com.google.guava:guava'                            : '30.1.1-jre',
                'com.graphql-java:graphql-java'                     : '14.0',
                'com.github.wnameless:json-flattener'               : '0.6.0',
                'com.github.ben-manes.caffeine:caffeine'            : '2.8.2',
                'com.rabbitmq:amqp-client'                          : '5.7.3',
                'org.flywaydb:flyway-core'                          : '4.2.0',
                'org.jooq:jool'                                     : '0.9.14',
                'org.simpleflatmapper:sfm-jdbc'                     : '8.2.3',
                'io.gitlab.arturbosch.detekt:detekt-gradle-plugin'  : '1.17.1',
                'jakarta.validation:jakarta.validation-api'         : '2.0.2',
                'org.hibernate.validator:hibernate-validator'       : '6.2.0.Final',
                'org.apache.tomcat.embed:tomcat-embed-el'           : '9.0.46',
                'org.apache.commons:commons-compress'               : '1.21'
        ]
)

ext.lib = {String dependency ->
    dependency + ':' + dependenciesMap[dependency]
}

def deprecatedDependenciesMap = [
        'com.idf.soul:database': '2.1.55'
]

ext.deprecatedLib = {String dependency ->
    dependency + ':' + deprecatedDependenciesMap[dependency]
}

ext.getVersion = {String dependency ->
    dependenciesMap[dependency]
}

def concatMaps(Map... maps) {
    maps.collectEntries()
}

def version(String version, List<String> artifacts) {
    def map = [:]
    artifacts.each {map.put(it, version)}
    map
}
