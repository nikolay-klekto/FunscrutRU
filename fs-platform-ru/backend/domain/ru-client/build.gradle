plugins {
    id("org.springframework.boot") version "3.0.2"
    id("io.spring.dependency-management") version "1.1.0"
    id("org.jetbrains.kotlin.plugin.spring") version "1.8.0"
    id("org.jetbrains.kotlin.plugin.jpa") version "1.8.0"
    id("nu.studer.jooq") version "8.1"

}

dependencies {
    implementation(project(":backend:domain:ru-client-model"))
    implementation("org.springframework.boot:spring-boot-gradle-plugin:3.0.2")

    implementation("org.springframework.boot:spring-boot-starter-actuator:3.0.2")
    implementation("org.springframework.boot:spring-boot-starter-web:3.0.2")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:3.0.2")
    implementation("org.springframework.boot:spring-boot-starter-mail:3.0.2")
    implementation("org.springframework.boot:spring-boot-starter-security:3.0.2")
    implementation("org.springframework.boot:spring-boot-devtools:3.0.2")
    implementation("org.cfg4j:cfg4j-core:4.4.1")
    implementation("jakarta.validation:jakarta.validation-api:3.0.2")
    compileOnly("javax.servlet:javax.servlet-api:4.0.1")
    implementation("org.postgresql:postgresql:42.5.1")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf:3.0.2")
    implementation("commons-io:commons-io:2.11.0")
    implementation("com.mashape.unirest:unirest-java:1.4.9")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.14.1")
    implementation("org.springframework.boot:spring-boot-devtools:3.0.2")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.2")
    implementation("org.hibernate.validator:hibernate-validator:8.0.0.Final")

    implementation("org.jooq:jooq:3.17.7")
    implementation("org.jooq:jooq-meta:3.17.7")
    implementation("org.jooq:jooq-codegen:3.17.7")
    compileOnly("org.jooq:jooq:3.17.7")
    runtimeOnly("org.postgresql:postgresql:42.5.1")
    jooqGenerator("org.postgresql:postgresql:42.5.1")

    implementation("org.reactivestreams:reactive-streams")
    implementation("org.springframework:spring-webflux")
    implementation("io.projectreactor:reactor-core")

}

jooq {
    version = '3.17.6'
    configurations {
        main {
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql:FunScrut'
                    user = 'postgres'
                    password = '191220#destin'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'

                    generate {
                        tables = 'false'
                        pojos = 'true'
                        relations = 'false'
                        deprecated = 'false'
                        records = 'false'
                        immutablePojos = 'false'
                        fluentSetters = 'false'
                        daos = 'false'
                    }

                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        includes = '.*'
                        excludes = ''
                        inputSchema = 'public'

                        forcedTypes {
                            forcedType {
                                userType = 'com.fs.client.ru.enums.ClientRoleModel'
                                enumConverter = true
                                includeExpression = '.*client\\.role'
                            }
                            forcedType {
                                userType = 'com.fs.client.ru.enums.EducationModel'
                                enumConverter = true
                                includeExpression = '.*client\\.education_status'
                            }
                            forcedType {
                                userType = 'com.fs.client.ru.enums.EmploymentModel'
                                enumConverter = true
                                includeExpression = '.*client\\.employment'
                            }
                        }
                    }
                    target {
                        packageName = 'com.fs.domain'
                        directory = 'src/main/generated-src/jooq'
                    }
                }
            }
        }
    }
}
