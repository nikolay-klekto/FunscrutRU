name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    if: |
      contains(github.event.head_commit.message, '[deploy-back]') ||
      contains(github.event.pull_request.title, '[deploy-back]')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'  # Укажите версию JDK
        distribution: 'temurin'        
    - name: Run build with Gradle Wrapper
      run: ./gradlew build  # Или используйте Maven: mvn clean package
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
        gradle-version: 7.4.2

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-app
        path: backend/domain/ru-client/build/libs/ru-client-0.0.2-SNAPSHOT.jar  # Путь к сгенерированному JAR файлу

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: my-app
        path: ./artifact
        
    - name: Verify artifact downloaded
      run: ls -l ./artifact  # Проверка, что артефакт был загружен

    - name: Copy files via SCP
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        scp -o StrictHostKeyChecking=no ./artifact/ru-client-0.0.2-SNAPSHOT.jar root@funscrut.online:${{ secrets.DESTINATION_FOLDER_BACK }}
        
    - name: Restart Docker Compose
      env:
       SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
       ssh -o StrictHostKeyChecking=no root@funscrut.online << 'EOF'
       cd /home/Nikolay/funScrut
       docker compose up -d --build
       EOF
