/*
 * This file is generated by jOOQ.
 */
package com.fs.domain.jooq.tables.records


import com.fs.domain.jooq.tables.Event

import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class EventRecord() : UpdatableRecordImpl<EventRecord>(Event.EVENT), Record11<Long?, LocalDate?, String?, Boolean?, String?, String?, String?, Long?, String?, String?, Long?> {

    var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    var date: LocalDate?
        set(value): Unit = set(1, value)
        get(): LocalDate? = get(1) as LocalDate?

    var description: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    @set:JvmName("setIsExpired")
    var isExpired: Boolean?
        set(value): Unit = set(3, value)
        get(): Boolean? = get(3) as Boolean?

    var name: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    var publicPlaceName: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    var site: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    var cityId: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    var time: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    var organizer: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    var eventCategoryId: Long?
        set(value): Unit = set(10, value)
        get(): Long? = get(10) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<Long?, LocalDate?, String?, Boolean?, String?, String?, String?, Long?, String?, String?, Long?> = super.fieldsRow() as Row11<Long?, LocalDate?, String?, Boolean?, String?, String?, String?, Long?, String?, String?, Long?>
    override fun valuesRow(): Row11<Long?, LocalDate?, String?, Boolean?, String?, String?, String?, Long?, String?, String?, Long?> = super.valuesRow() as Row11<Long?, LocalDate?, String?, Boolean?, String?, String?, String?, Long?, String?, String?, Long?>
    override fun field1(): Field<Long?> = Event.EVENT.ID
    override fun field2(): Field<LocalDate?> = Event.EVENT.DATE
    override fun field3(): Field<String?> = Event.EVENT.DESCRIPTION
    override fun field4(): Field<Boolean?> = Event.EVENT.IS_EXPIRED
    override fun field5(): Field<String?> = Event.EVENT.NAME
    override fun field6(): Field<String?> = Event.EVENT.PUBLIC_PLACE_NAME
    override fun field7(): Field<String?> = Event.EVENT.SITE
    override fun field8(): Field<Long?> = Event.EVENT.CITY_ID
    override fun field9(): Field<String?> = Event.EVENT.TIME
    override fun field10(): Field<String?> = Event.EVENT.ORGANIZER
    override fun field11(): Field<Long?> = Event.EVENT.EVENT_CATEGORY_ID
    override fun component1(): Long? = id
    override fun component2(): LocalDate? = date
    override fun component3(): String? = description
    override fun component4(): Boolean? = isExpired
    override fun component5(): String? = name
    override fun component6(): String? = publicPlaceName
    override fun component7(): String? = site
    override fun component8(): Long? = cityId
    override fun component9(): String? = time
    override fun component10(): String? = organizer
    override fun component11(): Long? = eventCategoryId
    override fun value1(): Long? = id
    override fun value2(): LocalDate? = date
    override fun value3(): String? = description
    override fun value4(): Boolean? = isExpired
    override fun value5(): String? = name
    override fun value6(): String? = publicPlaceName
    override fun value7(): String? = site
    override fun value8(): Long? = cityId
    override fun value9(): String? = time
    override fun value10(): String? = organizer
    override fun value11(): Long? = eventCategoryId

    override fun value1(value: Long?): EventRecord {
        this.id = value
        return this
    }

    override fun value2(value: LocalDate?): EventRecord {
        this.date = value
        return this
    }

    override fun value3(value: String?): EventRecord {
        this.description = value
        return this
    }

    override fun value4(value: Boolean?): EventRecord {
        this.isExpired = value
        return this
    }

    override fun value5(value: String?): EventRecord {
        this.name = value
        return this
    }

    override fun value6(value: String?): EventRecord {
        this.publicPlaceName = value
        return this
    }

    override fun value7(value: String?): EventRecord {
        this.site = value
        return this
    }

    override fun value8(value: Long?): EventRecord {
        this.cityId = value
        return this
    }

    override fun value9(value: String?): EventRecord {
        this.time = value
        return this
    }

    override fun value10(value: String?): EventRecord {
        this.organizer = value
        return this
    }

    override fun value11(value: Long?): EventRecord {
        this.eventCategoryId = value
        return this
    }

    override fun values(value1: Long?, value2: LocalDate?, value3: String?, value4: Boolean?, value5: String?, value6: String?, value7: String?, value8: Long?, value9: String?, value10: String?, value11: Long?): EventRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised EventRecord
     */
    constructor(id: Long? = null, date: LocalDate? = null, description: String? = null, isExpired: Boolean? = null, name: String? = null, publicPlaceName: String? = null, site: String? = null, cityId: Long? = null, time: String? = null, organizer: String? = null, eventCategoryId: Long? = null): this() {
        this.id = id
        this.date = date
        this.description = description
        this.isExpired = isExpired
        this.name = name
        this.publicPlaceName = publicPlaceName
        this.site = site
        this.cityId = cityId
        this.time = time
        this.organizer = organizer
        this.eventCategoryId = eventCategoryId
    }

    /**
     * Create a detached, initialised EventRecord
     */
    constructor(value: com.fs.domain.jooq.tables.pojos.Event?): this() {
        if (value != null) {
            this.id = value.id
            this.date = value.date
            this.description = value.description
            this.isExpired = value.isExpired
            this.name = value.name
            this.publicPlaceName = value.publicPlaceName
            this.site = value.site
            this.cityId = value.cityId
            this.time = value.time
            this.organizer = value.organizer
            this.eventCategoryId = value.eventCategoryId
        }
    }
}
