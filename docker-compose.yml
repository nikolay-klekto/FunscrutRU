version: '3.7'
services:
  app:
    image: ru-client:latest
    build:
      context: fs-platform-ru
      dockerfile: Dockerfile-Client
    ports:
      - "8183:8183"
    #    container_name: app
    depends_on:
      - service-db
#       condition: service_healthy
    environment:
      - SERVER_PORT= 8183
      - SPRING_DATASOURCE_URL=jdbc:postgresql://service-db/fun_scrut

  app2:
    image: ru-gateway:latest
    build:
      context: fs-platform-ru
      dockerfile: Dockerfile-Gateway
    ports:
      - "8081:8081"
    #    container_name: app
    depends_on:
      - service-db
    #       condition: service_healthy
    environment:
      - SERVER_PORT= 8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://service-db/fun_scrut

  service-db:
    image: postgres:14.7-alpine
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready", "-d", "fun_scrut" ]
#      interval: 10s
#      timeout: 3s
#      retries: 3
    ports:
      - "15432:5432"
    volumes:
#      - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - ./infrastructure/db:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  db-data:
  pgadmin-data:
